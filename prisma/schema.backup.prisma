// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NextAuth.js required tables
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Application Models - BACKUP BEFORE EXPANSION
model Company {
  id                  String   @id @default(cuid())
  name                String
  email               String   @unique
  phone               String?
  logo_url            String?
  website             String?
  subscription_plan   String   @default("basic") // basic, premium, enterprise
  subscription_status String   @default("active") // active, inactive, suspended
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  // Relations
  users     User[]
  services  Service[]
  bookings  Booking[]
  payments  Payment[]
  schedules Schedule[]

  @@map("companies")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password_hash String? // For credentials login
  company_id    String?
  role          String    @default("user") // super_admin, admin, manager, employee, user
  is_active     Boolean   @default(true)
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt

  // NextAuth.js relations
  accounts Account[]
  sessions Session[]

  // Application relations
  company           Company?           @relation(fields: [company_id], references: [id])
  bookings_created  Booking[]          @relation("BookingCreatedBy")
  bookings_assigned Booking[]          @relation("BookingAssignedTo")
  schedules         Schedule[]
  time_logs         TimeLog[]
  user_services     UserService[]
  notifications     Notification[]
  tasks_created     Task[]             @relation("TaskCreatedBy")
  tasks_assigned    Task[]             @relation("TaskAssignedTo")
  user_permissions  UserPermission[]

  @@map("users")
}
